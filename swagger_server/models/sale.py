# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Sale(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, product_id: int=None, customer_id: int=None, salesperson_id: int=None, sale_date: date=None, quantity: int=None):  # noqa: E501
        """Sale - a model defined in Swagger

        :param id: The id of this Sale.  # noqa: E501
        :type id: int
        :param product_id: The product_id of this Sale.  # noqa: E501
        :type product_id: int
        :param customer_id: The customer_id of this Sale.  # noqa: E501
        :type customer_id: int
        :param salesperson_id: The salesperson_id of this Sale.  # noqa: E501
        :type salesperson_id: int
        :param sale_date: The sale_date of this Sale.  # noqa: E501
        :type sale_date: date
        :param quantity: The quantity of this Sale.  # noqa: E501
        :type quantity: int
        """
        self.swagger_types = {
            'id': int,
            'product_id': int,
            'customer_id': int,
            'salesperson_id': int,
            'sale_date': date,
            'quantity': int
        }

        self.attribute_map = {
            'id': 'id',
            'product_id': 'product_id',
            'customer_id': 'customer_id',
            'salesperson_id': 'salesperson_id',
            'sale_date': 'sale_date',
            'quantity': 'quantity'
        }
        self._id = id
        self._product_id = product_id
        self._customer_id = customer_id
        self._salesperson_id = salesperson_id
        self._sale_date = sale_date
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt) -> 'Sale':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Sale of this Sale.  # noqa: E501
        :rtype: Sale
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Sale.


        :return: The id of this Sale.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Sale.


        :param id: The id of this Sale.
        :type id: int
        """

        self._id = id

    @property
    def product_id(self) -> int:
        """Gets the product_id of this Sale.


        :return: The product_id of this Sale.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id: int):
        """Sets the product_id of this Sale.


        :param product_id: The product_id of this Sale.
        :type product_id: int
        """

        self._product_id = product_id

    @property
    def customer_id(self) -> int:
        """Gets the customer_id of this Sale.


        :return: The customer_id of this Sale.
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: int):
        """Sets the customer_id of this Sale.


        :param customer_id: The customer_id of this Sale.
        :type customer_id: int
        """

        self._customer_id = customer_id

    @property
    def salesperson_id(self) -> int:
        """Gets the salesperson_id of this Sale.


        :return: The salesperson_id of this Sale.
        :rtype: int
        """
        return self._salesperson_id

    @salesperson_id.setter
    def salesperson_id(self, salesperson_id: int):
        """Sets the salesperson_id of this Sale.


        :param salesperson_id: The salesperson_id of this Sale.
        :type salesperson_id: int
        """

        self._salesperson_id = salesperson_id

    @property
    def sale_date(self) -> date:
        """Gets the sale_date of this Sale.


        :return: The sale_date of this Sale.
        :rtype: date
        """
        return self._sale_date

    @sale_date.setter
    def sale_date(self, sale_date: date):
        """Sets the sale_date of this Sale.


        :param sale_date: The sale_date of this Sale.
        :type sale_date: date
        """

        self._sale_date = sale_date

    @property
    def quantity(self) -> int:
        """Gets the quantity of this Sale.


        :return: The quantity of this Sale.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: int):
        """Sets the quantity of this Sale.


        :param quantity: The quantity of this Sale.
        :type quantity: int
        """

        self._quantity = quantity
