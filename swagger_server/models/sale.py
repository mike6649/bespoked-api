# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Sale(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, customer_id: int=None, salesperson_id: int=None, sales_date: date=None):  # noqa: E501
        """Sale - a model defined in Swagger

        :param id: The id of this Sale.  # noqa: E501
        :type id: int
        :param customer_id: The customer_id of this Sale.  # noqa: E501
        :type customer_id: int
        :param salesperson_id: The salesperson_id of this Sale.  # noqa: E501
        :type salesperson_id: int
        :param sales_date: The sales_date of this Sale.  # noqa: E501
        :type sales_date: date
        """
        self.swagger_types = {
            'id': int,
            'customer_id': int,
            'salesperson_id': int,
            'sales_date': date
        }

        self.attribute_map = {
            'id': 'id',
            'customer_id': 'customer_id',
            'salesperson_id': 'salesperson_id',
            'sales_date': 'sales_date'
        }
        self._id = id
        self._customer_id = customer_id
        self._salesperson_id = salesperson_id
        self._sales_date = sales_date

    @classmethod
    def from_dict(cls, dikt) -> 'Sale':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Sale of this Sale.  # noqa: E501
        :rtype: Sale
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Sale.


        :return: The id of this Sale.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Sale.


        :param id: The id of this Sale.
        :type id: int
        """

        self._id = id

    @property
    def customer_id(self) -> int:
        """Gets the customer_id of this Sale.


        :return: The customer_id of this Sale.
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: int):
        """Sets the customer_id of this Sale.


        :param customer_id: The customer_id of this Sale.
        :type customer_id: int
        """

        self._customer_id = customer_id

    @property
    def salesperson_id(self) -> int:
        """Gets the salesperson_id of this Sale.


        :return: The salesperson_id of this Sale.
        :rtype: int
        """
        return self._salesperson_id

    @salesperson_id.setter
    def salesperson_id(self, salesperson_id: int):
        """Sets the salesperson_id of this Sale.


        :param salesperson_id: The salesperson_id of this Sale.
        :type salesperson_id: int
        """

        self._salesperson_id = salesperson_id

    @property
    def sales_date(self) -> date:
        """Gets the sales_date of this Sale.


        :return: The sales_date of this Sale.
        :rtype: date
        """
        return self._sales_date

    @sales_date.setter
    def sales_date(self, sales_date: date):
        """Sets the sales_date of this Sale.


        :param sales_date: The sales_date of this Sale.
        :type sales_date: date
        """

        self._sales_date = sales_date
