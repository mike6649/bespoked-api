# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.customer import Customer  # noqa: F401,E501
from swagger_server.models.product import Product  # noqa: F401,E501
from swagger_server.models.salesperson import Salesperson  # noqa: F401,E501
from swagger_server import util


class DetailedSale(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, product: Product=None, customer: Customer=None, salesperson: Salesperson=None, sale_date: date=None, quantity: int=None):  # noqa: E501
        """DetailedSale - a model defined in Swagger

        :param id: The id of this DetailedSale.  # noqa: E501
        :type id: int
        :param product: The product of this DetailedSale.  # noqa: E501
        :type product: Product
        :param customer: The customer of this DetailedSale.  # noqa: E501
        :type customer: Customer
        :param salesperson: The salesperson of this DetailedSale.  # noqa: E501
        :type salesperson: Salesperson
        :param sale_date: The sale_date of this DetailedSale.  # noqa: E501
        :type sale_date: date
        :param quantity: The quantity of this DetailedSale.  # noqa: E501
        :type quantity: int
        """
        self.swagger_types = {
            'id': int,
            'product': Product,
            'customer': Customer,
            'salesperson': Salesperson,
            'sale_date': date,
            'quantity': int
        }

        self.attribute_map = {
            'id': 'id',
            'product': 'product',
            'customer': 'customer',
            'salesperson': 'salesperson',
            'sale_date': 'sale_date',
            'quantity': 'quantity'
        }
        self._id = id
        self._product = product
        self._customer = customer
        self._salesperson = salesperson
        self._sale_date = sale_date
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt) -> 'DetailedSale':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DetailedSale of this DetailedSale.  # noqa: E501
        :rtype: DetailedSale
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this DetailedSale.


        :return: The id of this DetailedSale.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this DetailedSale.


        :param id: The id of this DetailedSale.
        :type id: int
        """

        self._id = id

    @property
    def product(self) -> Product:
        """Gets the product of this DetailedSale.


        :return: The product of this DetailedSale.
        :rtype: Product
        """
        return self._product

    @product.setter
    def product(self, product: Product):
        """Sets the product of this DetailedSale.


        :param product: The product of this DetailedSale.
        :type product: Product
        """

        self._product = product

    @property
    def customer(self) -> Customer:
        """Gets the customer of this DetailedSale.


        :return: The customer of this DetailedSale.
        :rtype: Customer
        """
        return self._customer

    @customer.setter
    def customer(self, customer: Customer):
        """Sets the customer of this DetailedSale.


        :param customer: The customer of this DetailedSale.
        :type customer: Customer
        """

        self._customer = customer

    @property
    def salesperson(self) -> Salesperson:
        """Gets the salesperson of this DetailedSale.


        :return: The salesperson of this DetailedSale.
        :rtype: Salesperson
        """
        return self._salesperson

    @salesperson.setter
    def salesperson(self, salesperson: Salesperson):
        """Sets the salesperson of this DetailedSale.


        :param salesperson: The salesperson of this DetailedSale.
        :type salesperson: Salesperson
        """

        self._salesperson = salesperson

    @property
    def sale_date(self) -> date:
        """Gets the sale_date of this DetailedSale.


        :return: The sale_date of this DetailedSale.
        :rtype: date
        """
        return self._sale_date

    @sale_date.setter
    def sale_date(self, sale_date: date):
        """Sets the sale_date of this DetailedSale.


        :param sale_date: The sale_date of this DetailedSale.
        :type sale_date: date
        """

        self._sale_date = sale_date

    @property
    def quantity(self) -> int:
        """Gets the quantity of this DetailedSale.


        :return: The quantity of this DetailedSale.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: int):
        """Sets the quantity of this DetailedSale.


        :param quantity: The quantity of this DetailedSale.
        :type quantity: int
        """

        self._quantity = quantity
