# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Salesperson(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, firstname: str=None, lastname: str=None, address: str=None, phone: str=None, begindate: date=None, enddate: date=None, manager: str=None):  # noqa: E501
        """Salesperson - a model defined in Swagger

        :param id: The id of this Salesperson.  # noqa: E501
        :type id: int
        :param firstname: The firstname of this Salesperson.  # noqa: E501
        :type firstname: str
        :param lastname: The lastname of this Salesperson.  # noqa: E501
        :type lastname: str
        :param address: The address of this Salesperson.  # noqa: E501
        :type address: str
        :param phone: The phone of this Salesperson.  # noqa: E501
        :type phone: str
        :param begindate: The begindate of this Salesperson.  # noqa: E501
        :type begindate: date
        :param enddate: The enddate of this Salesperson.  # noqa: E501
        :type enddate: date
        :param manager: The manager of this Salesperson.  # noqa: E501
        :type manager: str
        """
        self.swagger_types = {
            'id': int,
            'firstname': str,
            'lastname': str,
            'address': str,
            'phone': str,
            'begindate': date,
            'enddate': date,
            'manager': str
        }

        self.attribute_map = {
            'id': 'id',
            'firstname': 'firstname',
            'lastname': 'lastname',
            'address': 'address',
            'phone': 'phone',
            'begindate': 'begindate',
            'enddate': 'enddate',
            'manager': 'manager'
        }
        self._id = id
        self._firstname = firstname
        self._lastname = lastname
        self._address = address
        self._phone = phone
        self._begindate = begindate
        self._enddate = enddate
        self._manager = manager

    @classmethod
    def from_dict(cls, dikt) -> 'Salesperson':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Salesperson of this Salesperson.  # noqa: E501
        :rtype: Salesperson
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Salesperson.


        :return: The id of this Salesperson.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Salesperson.


        :param id: The id of this Salesperson.
        :type id: int
        """

        self._id = id

    @property
    def firstname(self) -> str:
        """Gets the firstname of this Salesperson.


        :return: The firstname of this Salesperson.
        :rtype: str
        """
        return self._firstname

    @firstname.setter
    def firstname(self, firstname: str):
        """Sets the firstname of this Salesperson.


        :param firstname: The firstname of this Salesperson.
        :type firstname: str
        """

        self._firstname = firstname

    @property
    def lastname(self) -> str:
        """Gets the lastname of this Salesperson.


        :return: The lastname of this Salesperson.
        :rtype: str
        """
        return self._lastname

    @lastname.setter
    def lastname(self, lastname: str):
        """Sets the lastname of this Salesperson.


        :param lastname: The lastname of this Salesperson.
        :type lastname: str
        """

        self._lastname = lastname

    @property
    def address(self) -> str:
        """Gets the address of this Salesperson.


        :return: The address of this Salesperson.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this Salesperson.


        :param address: The address of this Salesperson.
        :type address: str
        """

        self._address = address

    @property
    def phone(self) -> str:
        """Gets the phone of this Salesperson.


        :return: The phone of this Salesperson.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone: str):
        """Sets the phone of this Salesperson.


        :param phone: The phone of this Salesperson.
        :type phone: str
        """

        self._phone = phone

    @property
    def begindate(self) -> date:
        """Gets the begindate of this Salesperson.


        :return: The begindate of this Salesperson.
        :rtype: date
        """
        return self._begindate

    @begindate.setter
    def begindate(self, begindate: date):
        """Sets the begindate of this Salesperson.


        :param begindate: The begindate of this Salesperson.
        :type begindate: date
        """

        self._begindate = begindate

    @property
    def enddate(self) -> date:
        """Gets the enddate of this Salesperson.


        :return: The enddate of this Salesperson.
        :rtype: date
        """
        return self._enddate

    @enddate.setter
    def enddate(self, enddate: date):
        """Sets the enddate of this Salesperson.


        :param enddate: The enddate of this Salesperson.
        :type enddate: date
        """

        self._enddate = enddate

    @property
    def manager(self) -> str:
        """Gets the manager of this Salesperson.


        :return: The manager of this Salesperson.
        :rtype: str
        """
        return self._manager

    @manager.setter
    def manager(self, manager: str):
        """Sets the manager of this Salesperson.


        :param manager: The manager of this Salesperson.
        :type manager: str
        """

        self._manager = manager
