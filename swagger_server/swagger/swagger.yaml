openapi: 3.0.3
info:
  title: Bespoked Bikes - API
  description: BeSpoked Bikes is looking to create a sales tracking application.  BeSpoked
    is a high-end bicycle shop and each salesperson gets a commission for each bike
    they sell.  They are introducing a new quarterly bonus based on sales as an incentive.
  version: 1.0.11
servers:
- url: /api
tags:
- name: salesperson
  description: Everything about Salespersons
- name: product
  description: Products
- name: customer
  description: Customers
- name: sale
  description: Sales
paths:
  /:
    get:
      summary: health check
      description: health check
      operationId: health_check
      responses:
        "200":
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /salespersons:
    get:
      tags:
      - salesperson
      summary: Get list of salespersons
      description: Get list of salespersons
      operationId: get_salespersons
      parameters:
      - name: firstname
        in: query
        description: First Name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Salesperson'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.salesperson_controller
  /salesperson/{id}:
    get:
      tags:
      - salesperson
      summary: Get salesperson by ID
      operationId: get_salesperson_by_id
      parameters:
      - name: id
        in: path
        description: Salesperson ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salesperson'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.salesperson_controller
  /salesperson:
    post:
      tags:
      - salesperson
      summary: Update or create salesperson
      operationId: update_sales_person
      requestBody:
        description: salesperson object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Salesperson'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salesperson'
      x-openapi-router-controller: swagger_server.controllers.salesperson_controller
  /products:
    get:
      tags:
      - product
      summary: Get list of products
      description: Get list of products
      operationId: get_products
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.product_controller
  /product/{id}:
    get:
      tags:
      - product
      summary: Get product by ID
      operationId: get_product_by_id
      parameters:
      - name: id
        in: path
        description: Product ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.product_controller
  /product:
    post:
      tags:
      - product
      summary: Update or create product
      operationId: update_product
      requestBody:
        description: Product object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      x-openapi-router-controller: swagger_server.controllers.product_controller
  /customers:
    get:
      tags:
      - customer
      summary: Get list of customers
      description: Get list of customers
      operationId: get_customers
      parameters:
      - name: firstname
        in: query
        description: First Name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.customer_controller
  /customer/{id}:
    get:
      tags:
      - customer
      summary: Get customer by ID
      operationId: get_customer_by_id
      parameters:
      - name: id
        in: path
        description: Customer ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.customer_controller
  /customer:
    post:
      tags:
      - customer
      summary: Update or create Customer
      operationId: update_customer
      requestBody:
        description: Customer object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      x-openapi-router-controller: swagger_server.controllers.customer_controller
  /sales:
    get:
      tags:
      - sale
      summary: Get list of sales
      description: Get list of sales
      operationId: get_sales
      parameters:
      - name: begin_date
        in: query
        description: Begin Date
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: date
      - name: end_date
        in: query
        description: End Date
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DetailedSale'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.sale_controller
  /sale/{id}:
    get:
      tags:
      - sale
      summary: Get sale by ID
      operationId: get_sale_by_id
      parameters:
      - name: id
        in: path
        description: Customer ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedSale'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.sale_controller
  /sale:
    post:
      tags:
      - sale
      summary: Create Sale
      operationId: create_sale
      requestBody:
        description: Sale object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
      x-openapi-router-controller: swagger_server.controllers.sale_controller
  /report/{id}:
    get:
      tags:
      - salesperson
      summary: Quarterly Report
      operationId: quarterly_report
      parameters:
      - name: id
        in: path
        description: Salesperson ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: year
        in: query
        description: Year
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: quarter
        in: query
        description: Quarter
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      x-openapi-router-controller: swagger_server.controllers.salesperson_controller
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        manufacturer:
          type: string
        style:
          type: string
        purchase_price:
          type: string
        sale_price:
          type: string
        quantity:
          type: integer
          format: int64
        commission_pct:
          type: string
      example:
        commission_pct: commission_pct
        quantity: 6
        name: name
        purchase_price: purchase_price
        style: style
        id: 0
        sale_price: sale_price
        manufacturer: manufacturer
    Salesperson:
      type: object
      properties:
        id:
          type: integer
        firstname:
          type: string
          example: fehguy
        lastname:
          type: string
        address:
          type: string
        phone:
          type: string
        begin_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        manager:
          type: string
      example:
        end_date: 2000-01-23
        firstname: fehguy
        address: address
        manager: manager
        phone: phone
        begin_date: 2000-01-23
        id: 0
        lastname: lastname
    Customer:
      type: object
      properties:
        id:
          type: integer
        firstname:
          type: string
          example: fehguy
        lastname:
          type: string
        address:
          type: string
        phone:
          type: string
        begin_date:
          type: string
          format: date
      example:
        firstname: fehguy
        address: address
        phone: phone
        begin_date: 2000-01-23
        id: 0
        lastname: lastname
      xml:
        name: customer
    Sale:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
        customer_id:
          type: integer
        salesperson_id:
          type: integer
        sale_date:
          type: string
          format: date
        quantity:
          type: integer
      example:
        salesperson_id: 5
        quantity: 5
        sale_date: 2000-01-23
        product_id: 6
        id: 0
        customer_id: 1
    DetailedSale:
      type: object
      properties:
        id:
          type: integer
        product:
          $ref: '#/components/schemas/Product'
        customer:
          $ref: '#/components/schemas/Customer'
        salesperson:
          $ref: '#/components/schemas/Salesperson'
        sale_date:
          type: string
          format: date
        quantity:
          type: integer
      example:
        product:
          commission_pct: commission_pct
          quantity: 6
          name: name
          purchase_price: purchase_price
          style: style
          id: 0
          sale_price: sale_price
          manufacturer: manufacturer
        quantity: 6
        salesperson:
          end_date: 2000-01-23
          firstname: fehguy
          address: address
          manager: manager
          phone: phone
          begin_date: 2000-01-23
          id: 0
          lastname: lastname
        sale_date: 2000-01-23
        id: 0
        customer:
          firstname: fehguy
          address: address
          phone: phone
          begin_date: 2000-01-23
          id: 0
          lastname: lastname
    ReportSale:
      type: object
      properties:
        id:
          type: integer
        product:
          $ref: '#/components/schemas/Product'
        customer:
          $ref: '#/components/schemas/Customer'
        sale_date:
          type: string
          format: date
        quantity:
          type: integer
        unit_price:
          type: string
        commission_pct:
          type: string
        commission:
          type: string
      example:
        product:
          commission_pct: commission_pct
          quantity: 6
          name: name
          purchase_price: purchase_price
          style: style
          id: 0
          sale_price: sale_price
          manufacturer: manufacturer
        commission_pct: commission_pct
        quantity: 6
        sale_date: 2000-01-23
        commission: commission
        id: 0
        unit_price: unit_price
        customer:
          firstname: fehguy
          address: address
          phone: phone
          begin_date: 2000-01-23
          id: 0
          lastname: lastname
    Report:
      type: object
      properties:
        salesperson:
          $ref: '#/components/schemas/Salesperson'
        year:
          type: string
          format: year
        quarter:
          type: string
        sales:
          type: array
          items:
            $ref: '#/components/schemas/ReportSale'
        total_sales:
          type: string
        total_commission:
          type: string
      example:
        salesperson:
          end_date: 2000-01-23
          firstname: fehguy
          address: address
          manager: manager
          phone: phone
          begin_date: 2000-01-23
          id: 0
          lastname: lastname
        total_commission: total_commission
        year: year
        total_sales: total_sales
        sales:
        - product:
            commission_pct: commission_pct
            quantity: 6
            name: name
            purchase_price: purchase_price
            style: style
            id: 0
            sale_price: sale_price
            manufacturer: manufacturer
          commission_pct: commission_pct
          quantity: 6
          sale_date: 2000-01-23
          commission: commission
          id: 0
          unit_price: unit_price
          customer:
            firstname: fehguy
            address: address
            phone: phone
            begin_date: 2000-01-23
            id: 0
            lastname: lastname
        - product:
            commission_pct: commission_pct
            quantity: 6
            name: name
            purchase_price: purchase_price
            style: style
            id: 0
            sale_price: sale_price
            manufacturer: manufacturer
          commission_pct: commission_pct
          quantity: 6
          sale_date: 2000-01-23
          commission: commission
          id: 0
          unit_price: unit_price
          customer:
            firstname: fehguy
            address: address
            phone: phone
            begin_date: 2000-01-23
            id: 0
            lastname: lastname
        quarter: quarter

